

*, ::before, ::after{   /*pour faciliter le respect des dimensions*/
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}




body
{
    background-color: rgb(75, 72, 72);
    font-family: 'Roboto', sans-serif;
}

p
{
    color: rgb(255, 255, 255);    /* commentaire */
    background-color:rgb(75, 72, 72);
    /* background: url("202201.jpg") fixed repeat; */
    /*background-attachment: fixed; = ne suis pas le texte */
    /*background-repeat: no-repeat; repeat; repeat-x; repeat-y;*/
    border: 1px rgb(0, 0, 0) solid; /*[border, border-left,...] epaisseur couleur continue= solid, dotted, dashed, double, groove, ridge, inset, outset*/
    /*border-radius: 15px / 10px; 2 valeurs pour une élipse*/
    /*box-shadow: 6px 6px 6px black; ou text-shadow; on peut ajouter inset pour que l'ombre soit à l'intérieur */
}

a
{
        color:rgb(0, 112, 6);
}

a:hover
{
    background-color:rgb(0, 112, 6);
    color:rgb(75, 72, 72);
}

h1
{
    text-align: center;
    color:brown;
    background-color: red;
}

.footer /*fait appel à la class="footer"*/
{
    color:green;
    opacity: 0.75;
}

/*
#id="AA" fait appel à l'id="AA" mais ne fonctionne que pour un élément
dans la page
*/

/*
on peut utiliser les balises <div></div> et <span></span> pour passer des id ou class, elles ne font rien d'autre
La grande différence entre les éléments div et span va concerner ce qu’ils vont pouvoir contenir : un élément div 
va pouvoir conteneur plusieurs éléments et va donc nous servir de conteneurs d’éléments tandis que l’élément span
va nous servir de conteneur pour une partie du contenu d’un élément et va donc être utilisé à l’intérieur d’un élément.

Cette différence est due au fait que les éléments div et span sont de niveau ou au « type » différents : l’élément div
est un élément de niveau block tandis que l’élément span est un élément de niveau inline.
*/

/*
On peut utiliser * au lieu de p ou h1 par exemple pour cibler toutes les balises

Si on utilise h1+p on ciblera uniquement le premier paragraphe qui suit le h1

Si on utilise h1 em on ciblera tous les em qui sont dans les h1

Si on utilise p[attribut] on ciblera une balise qui pocède l'attribut

Si on utilise p[title="b"] on ciblera une balise qui pocède l'attribut
title forcément égal à b

Si on utilise p[title*="b"] on ciblera une balise qui pocède l'attribut
title qui contient b (title="dbc" par exemple)
*/

/*
font-size: 1.5em; (em est relatif, sinon px par exemple)

font-family: Impact, "Times New Roman", Arial, Verdana, sans-serif;
(dans l'ordre de préférence) 

@font-face
{
    permet de définir une autre police en la faisant télécharger au client
}
*/

/*
font-style: italic;
text-decoration: underline; overline; line-through;
font-weight: bold;
text-align: left; center; right; justify;
*/

/*
Pour qu'une image ou un bloc soit habilée par le texte on peut lui donner la classe class="flottant"

.flottant
{
    float: left; right; (le texte vient autour et l'image se trouve à gauche ou à droite
}


pour arrêter (en commençant le paragraphe suivant par exemple on lui donne
la class="dessous"

.dessous
{
    clear: both; right; left;    
}
*/